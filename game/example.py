from events import *

def debug(msg):
    print msg

class EventManager(object):
    '''This object is responsible for coordinating most communication
    between the Model, View and controller.'''
    def __init__(self):
        from weakref import WeakKeyDictionary
        self.listeners = WeakKeyDictionary()
        self.eventQueue = []

    def register_listener(self, listener):
        self.listeners[listener] = 1

    def unregister_listener(self, listener):
        if listener in self.listeners:
            del self.listeners[listener]

    def post(self, event):
        self.eventQueue.append(event)
        if isinstance(event, TickEvent):
            # consume the event queue every Tick.
            self.ConsumeEventQueue()
        else:
            debug('    Message:' + event.name)

    def ConsumeEventQueue(self):
        i = 0
        while i < len(self.eventQueue):
            event = self.eventQueue[i]
            for listener in self.listeners:
                # NOTE: a side effect of notifying the listener
                # could be that more events are put on the queue.
                listener.notify(event)
            i += 1
        # All code paths that could possibly add more events to
        # the eventQueue have ben exhausted at this point, so
        # it's safe to empty the queue.
        self.eventQueue = []

class KeyboardController(object):
    '''KeyboardController takes pyglet events generated by the
    keyboard and usees them to control the model, by sending Requests
    or to control the Pyglet display directly, as with the QuitEvent.
    '''
    def __init__(self, event):
        self.evManager = evManager
        self.evManager.register_listener(self)

    def notify(self, event):
        if isinstance(event, TickEvent):
            # Handle Input Events
            for event in Pygame.event.get():
                ev = None
                ########################################
                # enter in variations of keyboard input#
                ########################################

                if ev:
                    self.evManager.Post(ev)
